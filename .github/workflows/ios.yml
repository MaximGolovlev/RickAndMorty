name: Xcode Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
      
    - name: Print available Xcode versions
      run: ls /Applications | grep Xcode
      
    - name: Show Xcode version
      run: xcodebuild -version

    - name: Cache Derived Data
      uses: actions/cache@v3
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-derived-data-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-derived-data-
            
    # - name: Select latest Xcode
    #   run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
      
    - name: Build the project
      run: xcodebuild build -project RickAndMorty.xcodeproj -scheme RickAndMorty -destination 'platform=iOS Simulator,name=iPhone 16'
      
    # - name: Run Tests
    #   run: xcodebuild test -project RickAndMorty.xcodeproj -scheme RickAndMorty -destination 'platform=iOS Simulator,name=iPhone 16'

    - name: Run Tests
      run: |
        xcodebuild test \
          -workspace RickAndMorty.xcworkspace \
          -scheme RickAndMorty \
          -destination 'platform=iOS Simulator,name=iPhone 16' \
          -enableCodeCoverage YES \
          -quiet \
          -parallel-testing-enabled YES \
          -parallel-testing-worker-count 4
          -only-testing:RickAndMorty/RickAndMortyTests/checkCharacters
